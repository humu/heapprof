# CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/configuration-reference/ for more details.
#
version: 2.1

executors:
  humu-ci-docker-image:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.7.2

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

orbs:
  win: circleci/windows@1.0.0

jobs:
  test:
    executor: humu-ci-docker-image
    working_directory: ~/repo
    steps:
      - checkout

      # Install dependencies, with caching.
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install_dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip setuptools cmake wheel
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run_tests
          command: |
            . venv/bin/activate
            python setup.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports


  lint:
    executor: humu-ci-docker-image
    working_directory: ~/repo
    steps:
      - checkout

      # Install dependencies, with caching.
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "tools/requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install_dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r tools/requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "tools/requirements.txt" }}

      - run:
          name: run_lint
          command: |
            . venv/bin/activate
            python tools/lint.py

      - store_artifacts:
          path: test-reports
          destination: test-reports

  # Use this to cross-compile a Windows binary and make a wheel. The resulting artifacts from
  # release candidates go into PIP.
  windows_64:
    executor:
      name: win/vs2019
    steps:
      - checkout
      - restore_cache:
          keys:
            - win-python-3.7.4
      - run:
          name: install_python
          command: |
            choco upgrade python --version 3.7.4 -c C:\downloadcache -y
            choco upgrade cmake -c C:\downloadcache -y --installargs 'ADD_CMAKE_TO_PATH=System'
      - run:
          name: upgrade_python
          command: |
            refreshenv
            Python.exe -m pip install --upgrade pip setuptools wheel
      - save_cache:
          paths:
            - C:\downloadcache
          key: win-python-3.7.4
      - run:
          name: test_and_build
          command: |
            refreshenv
            Python.exe setup.py test
            Python.exe setup.py bdist_wheel
      - store_artifacts:
          path: dist
          destination: wheel
      - store_artifacts:
          path: test-reports
          destination: test-reports


workflows:
  version: 2
  test:
    jobs:
      - lint
      - test
      - windows_64


# Only notify slack about build failures/fixes on master!
# https://discuss.circleci.com/t/only-notify-for-some-branches/10244
experimental:
  notify:
    branches:
      only:
        - master
